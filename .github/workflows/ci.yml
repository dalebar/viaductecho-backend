name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: viaduct_echo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --dev
          uv run pip install bandit

      - name: Create test environment file
        run: |
          echo "DATABASE_URL=postgresql://test_user:test_password@localhost:5432/viaduct_echo_test" > .env.test
          echo "OPENAI_API_KEY=test_key" >> .env.test
          echo "GITHUB_TOKEN=test_token" >> .env.test
          echo "GITHUB_REPO=test/repo" >> .env.test

      - name: Run linting checks
        run: |
          uv run flake8 src/ tests/
          uv run black --check src/ tests/
          uv run isort --check-only src/ tests/ --profile=black

      - name: Run security checks
        run: uv run bandit -r src/ -f json || true

      - name: Run tests with coverage
        run: |
          uv run python pytest tests \
            --cov=src \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing \
            -v
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/viaduct_echo_test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Archive coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t viaductecho-backend:latest .
          docker images

      - name: Test Docker image
        run: |
          docker run --rm viaductecho-backend:latest python -c "import src.main; print('Docker build successful!')"

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: |
          uv sync --dev
          uv add --dev mypy types-requests

      - name: Run type checking
        run: uv run mypy src/ --ignore-missing-imports --no-strict-optional || true